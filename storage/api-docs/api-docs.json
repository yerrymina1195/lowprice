{
    "openapi": "3.0.0",
    "info": {
        "title": "LowPriceClone",
        "description": "List of endpoints",
        "contact": {
            "name": "Swagger API Team"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API server"
        }
    ],
    "paths": {
        "/api/addresse/store": {
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Create a new address",
                "operationId": "d1c901b0988cc435d80c0cb2de8a43b3",
                "requestBody": {
                    "description": "Address object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "addresse",
                                    "telephone1",
                                    "zone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "addresse": {
                                        "type": "string",
                                        "example": "Hlm"
                                    },
                                    "zone": {
                                        "type": "string",
                                        "example": "Dakar"
                                    },
                                    "quartier": {
                                        "type": "string",
                                        "example": "Hlm"
                                    },
                                    "complement_addresse": {
                                        "type": "string",
                                        "example": "centre ville"
                                    },
                                    "telephone1": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "telephone2": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "enregistr√© avec success"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "test"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "test"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "Dakar"
                                                },
                                                "addresse": {
                                                    "type": "string",
                                                    "example": "Hlm"
                                                },
                                                "quartier": {
                                                    "type": "string",
                                                    "example": "Hlm"
                                                },
                                                "complement_addresse": {
                                                    "type": "string",
                                                    "example": "centre ville"
                                                },
                                                "telephone1": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "telephone2": {
                                                    "type": "string",
                                                    "example": "123456790"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-05-16T14:36:34.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-05-16T14:36:34.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresse/": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get user addresses",
                "operationId": "84ed5f568b8bb8c1abc1ab9aae6683d8",
                "responses": {
                    "200": {
                        "description": "User addresses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "addresses": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Address"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Addresses not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Addresses non trouv√©"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresse/update/{id}'": {
            "put": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Update user address",
                "operationId": "37bac3ed7a0b77ca4d7f1cbfc03b053d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the address to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Address data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "addresse",
                                    "telephone1",
                                    "zone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "addresse": {
                                        "type": "string",
                                        "example": "Hlm"
                                    },
                                    "zone": {
                                        "type": "string",
                                        "example": "Dakar"
                                    },
                                    "quartier": {
                                        "type": "string",
                                        "example": "Hlm"
                                    },
                                    "complement_addresse": {
                                        "type": "string",
                                        "example": "centre ville"
                                    },
                                    "telephone1": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "telephone2": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "modification faite"
                                        },
                                        "data": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "test"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "test"
                                                },
                                                "addresse": {
                                                    "type": "string",
                                                    "example": "Hlm"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "Dakar"
                                                },
                                                "quartier": {
                                                    "type": "string",
                                                    "example": "Hlm"
                                                },
                                                "complement_addresse": {
                                                    "type": "string",
                                                    "example": "centre ville"
                                                },
                                                "telephone1": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "telephone2": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Addresses non trouv√©"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication user"
                ],
                "summary": "Login User",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication user"
                ],
                "summary": "Register a new user",
                "operationId": "c7bb21a0d87049e161b8e4c9b0d909f2",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "date_of_birth",
                                    "telephone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered. Email verification sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/user-profile": {
            "get": {
                "tags": [
                    "Authentication user"
                ],
                "summary": "Get user profile",
                "operationId": "529b66ac546f7229855722d12c4ff077",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "test"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "test"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@example.com"
                                        },
                                        "telephone": {
                                            "type": "string",
                                            "example": "123456789"
                                        },
                                        "date_of_birth": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "1990-01-01"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/updateUserProfile": {
            "put": {
                "tags": [
                    "Authentication user"
                ],
                "summary": "Update user profile",
                "operationId": "b3ee7f938c32c2b77c2d16c705bdffb4",
                "requestBody": {
                    "description": "User profile details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "telephone",
                                    "date_of_birth"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "modification reussite"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/banniere": {
            "get": {
                "tags": [
                    "Banniere"
                ],
                "summary": "Get all bannieres",
                "operationId": "545dd81975483a589c235ac95906bde7",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Alimentaion"
                                            },
                                            "image": {
                                                "type": "string",
                                                "format": "url",
                                                "example": "Categories/lait"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/banniere/store": {
            "post": {
                "tags": [
                    "Banniere"
                ],
                "summary": "Create a new banniere",
                "operationId": "76e322923007a5201c483d61141a8eeb",
                "requestBody": {
                    "description": "banniere object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "pagelink"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New banniere"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "image.jpg"
                                    },
                                    "pagelink": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "banniere created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New banniere"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "banniere/image.jpg"
                                        },
                                        "pagelink": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "https://example.com/"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/banniere/update/{id}": {
            "put": {
                "tags": [
                    "Banniere"
                ],
                "summary": "Mettre √† jour une Banniere",
                "operationId": "02594d14877b55170ecf867f1d328b19",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du banniere",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Objet du banniere √† mettre √† jour",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "pagelink"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New banniere"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "image.jpg"
                                    },
                                    "pagelink": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "vBanniere updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "New banniere"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "image.jpg"
                                        },
                                        "pagelink": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "https://example.com/"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "Cat√©gorie non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/banniere/delete/{id}": {
            "delete": {
                "tags": [
                    "Banniere"
                ],
                "summary": "Supprimer une banniere",
                "operationId": "0645129551ba2c382a6ed241d6cf093b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du baniiere",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banniere delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Banniere supprim√©e avec succ√®s"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "Banniere non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "cebd555859c22f9da8c68f29535deecc",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Alimentaion"
                                            },
                                            "image": {
                                                "type": "string",
                                                "format": "url",
                                                "example": "Categories/lait"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/store": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "70291b8e502a2a62b11604af4c4885dc",
                "requestBody": {
                    "description": "Category object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Category"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Category"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "Category/image.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/show/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "R√©cup√©rer les d√©tails d'une cat√©gorie",
                "operationId": "128a51eaee738a70ce5971c30aec8105",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la cat√©gorie",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cat√©gorie r√©cup√©r√©e avec succ√®s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Nom de la cat√©gorie"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "https://exemple.com/image.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "Cat√©gorie non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/delete/{id}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Supprimer une cat√©gorie",
                "operationId": "7f3134404f9fb9f652fae491026e021f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la cat√©gorie",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cat√©gorie supprim√©e avec succ√®s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cat√©gorie supprim√©e avec succ√®s"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "Cat√©gorie non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/update/{id}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Mettre √† jour une cat√©gorie",
                "operationId": "79a3708bcb1bcc929384b681b48c879a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la cat√©gorie",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Objet de la cat√©gorie √† mettre √† jour",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nouveau nom de cat√©gorie"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://exemple.com/nouvelle-image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cat√©gorie mise √† jour avec succ√®s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Nouveau nom de cat√©gorie"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "https://exemple.com/nouvelle-image.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "Cat√©gorie non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorite": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products favorite",
                "operationId": "c87a35a7b8b88ca141ad1f62419d1db2",
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Produit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorite/{productid}/favorite": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add product to favorites",
                "operationId": "069597af80fc50d261440b18f108490a",
                "parameters": [
                    {
                        "name": "produit_id",
                        "in": "path",
                        "description": "ID of the product to add to favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "favoris ajout√©"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorite/{productid}": {
            "delete": {
                "tags": [
                    "User Favorites"
                ],
                "summary": "Remove product from favorites",
                "operationId": "b7a155f97a280122126f1208cfe436a7",
                "parameters": [
                    {
                        "name": "produit_id",
                        "in": "path",
                        "description": "ID of the product to remove from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "favoris supprim√©"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/store": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "861e98a008b0e483c96ecef6de174a2e",
                "requestBody": {
                    "description": "Order object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "paymentmethode_id",
                                    "methodelivraison_id",
                                    "addresse_id",
                                    "prixTotal",
                                    "items"
                                ],
                                "properties": {
                                    "paymentmethode_id": {
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "methodelivraison_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "addresse_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "prixTotal": {
                                        "type": "number",
                                        "example": "250000"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "produit_id",
                                                "quantity",
                                                "subTotal"
                                            ],
                                            "properties": {
                                                "produit_id": {
                                                    "type": "integer",
                                                    "example": "28"
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "subTotal": {
                                                    "type": "number",
                                                    "example": "252000"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "paymentmethode_id": {
                                                    "type": "integer"
                                                },
                                                "methodelivraison_id": {
                                                    "type": "integer"
                                                },
                                                "addresse_id": {
                                                    "type": "integer"
                                                },
                                                "prixTotal": {
                                                    "type": "number"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "produit_id": {
                                                                "type": "integer"
                                                            },
                                                            "quantity": {
                                                                "type": "integer"
                                                            },
                                                            "subTotal": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Search order and display ",
                "operationId": "19002642c767108dd4763cb7953b6ddc",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 2
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "name",
                                "prix"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search in product name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_statut",
                        "in": "query",
                        "description": "statut order",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_orderidentify",
                        "in": "query",
                        "description": "oreder identify",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "paymentmethode_id": {
                                                    "type": "integer"
                                                },
                                                "methodelivraison_id": {
                                                    "type": "integer"
                                                },
                                                "addresse_id": {
                                                    "type": "integer"
                                                },
                                                "prixTotal": {
                                                    "type": "number"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "produit_id": {
                                                                "type": "integer"
                                                            },
                                                            "quantity": {
                                                                "type": "integer"
                                                            },
                                                            "subTotal": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/order/mescommandes": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get orders of the authenticated user",
                "operationId": "8423a5ba2a0e58526f01c7afb704dc05",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders of the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "prixTotal": {
                                                "type": "string"
                                            },
                                            "orderidentify": {
                                                "type": "string"
                                            },
                                            "first_product_image": {
                                                "type": "string"
                                            },
                                            "statut": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            },
                                            "updated_at": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/updatestatut/{id}": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update the status of an order",
                "operationId": "83354e799a8b1f9a446781b53f18e1ab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New status of the order",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "statut"
                                ],
                                "properties": {
                                    "statut": {
                                        "type": "string",
                                        "enum": [
                                            "en cours",
                                            "termin√©",
                                            "annul√©",
                                            "livr√©"
                                        ],
                                        "example": "en cours"
                                    },
                                    "ispaid": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Modification r√©ussie"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "statut": {
                                                    "type": "string"
                                                },
                                                "ispaid": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/store": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "274bbad11ad74956ca5a3e3bef65b902",
                "requestBody": {
                    "description": "Product object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "categorie_id",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "velo mini"
                                    },
                                    "categorie_id": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "sub_categorie_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "produits/velo.jpeg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "enregistr√© avec success"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "velo mini"
                                                },
                                                "categorie_id": {
                                                    "type": "integer",
                                                    "example": "5"
                                                },
                                                "sub_categorie_id": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-05-16T14:36:34.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-05-16T14:36:34.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Search products and display ",
                "operationId": "f546d720c2ec31b8081c51898db243e1",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 2
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "name",
                                "prix"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "categorie_id",
                        "in": "query",
                        "description": "Category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subcategorie_id",
                        "in": "query",
                        "description": "Subcategory ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search in product name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/update/{id}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "operationId": "e1ee951a45111bdd4e7533b5b7b3dd56",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "categorie_id",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product Name"
                                    },
                                    "categorie_id": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "sub_categorie_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "product.jpeg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "produit  updated successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Product Name"
                                                },
                                                "categorie_id": {
                                                    "type": "integer",
                                                    "example": "5"
                                                },
                                                "sub_categorie_id": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-05-16T14:36:34.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-05-16T14:36:34.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/{id}": {
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "ec432440c21487a0062bc9909d839e7c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "produit  delete successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Produit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/show/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a product by ID",
                "operationId": "ce49881c60a4084f9f19e7eec744853a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Produit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/topProducts": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get top rated products",
                "operationId": "751e59416db55e208619b2ca11cca731",
                "responses": {
                    "200": {
                        "description": "Top rated products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promoBanniere": {
            "get": {
                "tags": [
                    "Promo"
                ],
                "summary": "Get all promo",
                "operationId": "524a6155f8098077b8163b598c0b3bc0",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Promo Tabaski"
                                            },
                                            "taux": {
                                                "type": "integer",
                                                "example": "60"
                                            },
                                            "available": {
                                                "type": "boolean",
                                                "example": "true"
                                            },
                                            "image": {
                                                "type": "string",
                                                "format": "url",
                                                "example": "Promos/Tabaski.png"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promoBanniere/store": {
            "post": {
                "tags": [
                    "Promo"
                ],
                "summary": "Create a promo",
                "operationId": "2b6cd39a9895c0ae9575737d148a53a4",
                "requestBody": {
                    "description": "Promo object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "image",
                                    "taux"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Promo Tabaski"
                                    },
                                    "taux": {
                                        "type": "integer",
                                        "example": "60"
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "Tabaski.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Promo Tabaski"
                                        },
                                        "taux": {
                                            "type": "integer",
                                            "example": "60"
                                        },
                                        "available": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "Promos/Tabaski.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promoBanniere/{id}": {
            "get": {
                "tags": [
                    "Promo"
                ],
                "summary": "get a promo",
                "operationId": "ab5b4275e2b4f839375fef008bc14ea0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la promotion",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promo r√©cup√©r√©e avec succ√®s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Promo Tabaski"
                                        },
                                        "taux": {
                                            "type": "integer",
                                            "example": "60"
                                        },
                                        "available": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "Promos/Tabaski.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "Promotion non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Promo"
                ],
                "summary": "get a promo",
                "operationId": "be3143338b0e03448ba6ad4634356a55",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la promotion",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PromoBanniere delete ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promotion supprim√©e avec succ√®s"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "PromoBanniere  non trouv√©e"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promoBanniere/update/{id}": {
            "put": {
                "tags": [
                    "Promo"
                ],
                "summary": "Mettre √† jour une Promotion",
                "operationId": "36cae12405d27f31dc2b214ad10e8be7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la Promotion",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Objet de la Promotion √† mettre √† jour",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "image",
                                    "taux"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Promo Tabaski"
                                    },
                                    "taux": {
                                        "type": "integer",
                                        "example": "60"
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "Tabaski.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promotion mise √† jour avec succ√®s"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promoProduct/": {
            "get": {
                "tags": [
                    "Promotional Products"
                ],
                "summary": "Get paginated list of promotional products",
                "operationId": "e746221d071bb5ef4372d009c44eb5db",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (default: 10)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by (default: created_at)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (default: desc)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of promotional products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "prixpromo": {
                                                "type": "number"
                                            },
                                            "produitname": {
                                                "type": "string"
                                            },
                                            "produitnameprix": {
                                                "type": "number"
                                            },
                                            "produitImage": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "promotitle": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            },
                                            "updated_at": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Promotional Products"
                ],
                "summary": "Add a product to promotion",
                "operationId": "09fb796e4c9acdf054d1238a1dbfe1b6",
                "requestBody": {
                    "description": "Promotional product object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "produit_id",
                                    "promobanniere_id",
                                    "prixpromo"
                                ],
                                "properties": {
                                    "produit_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "promobanniere_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "prixpromo": {
                                        "type": "number",
                                        "example": "50.00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Produit added with promo successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promotional product added successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "produit_id": {
                                                    "type": "integer"
                                                },
                                                "promobanniere_id": {
                                                    "type": "integer"
                                                },
                                                "prixpromo": {
                                                    "type": "number"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promoProduct/update/{id}": {
            "put": {
                "tags": [
                    "Promotional Products"
                ],
                "summary": "Update an existing product",
                "operationId": "3b0fef41447955c8d324f2e14f5c928a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the promo product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "produit_id",
                                    "promobanniere_id",
                                    "prixpromo"
                                ],
                                "properties": {
                                    "produit_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "promobanniere_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "prixpromo": {
                                        "type": "number",
                                        "example": "50.00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "'PromoProduit updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PromoProduit updated successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "produit_id": {
                                                    "type": "integer"
                                                },
                                                "promobanniere_id": {
                                                    "type": "integer"
                                                },
                                                "prixpromo": {
                                                    "type": "number"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promoProduct/delete/{id}": {
            "delete": {
                "tags": [
                    "Promotional Products"
                ],
                "summary": "Delete an existing product",
                "operationId": "b2d869602bbe47a78511977e0171d9fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the promo product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Produit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subcategory": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Get all subcategories",
                "operationId": "aeb39b846e7128a69be9c103111f4b8b",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Fruit"
                                            },
                                            "categorie_id": {
                                                "type": "integer",
                                                "example": "1"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subcategory/store": {
            "post": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Create a new subcategory",
                "operationId": "af4099ce36b5bbd3b08e7a65193050a0",
                "requestBody": {
                    "description": "Subcategory object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "categorie_id",
                                    "name"
                                ],
                                "properties": {
                                    "categorie_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Subcategory Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subcategory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategorie added successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Subcategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subcategory/update/{id}": {
            "put": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Mettre √† jour une sous cat√©gorie",
                "operationId": "4e0629f6f3d0ea0b3f6222003922dc46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la sous cat√©gorie",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Objet de la sous cat√©gorie √† mettre √† jour",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "categorie_id",
                                    "name"
                                ],
                                "properties": {
                                    "categorie_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Subcategory Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "subcategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Subcategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": " subcategory  not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subcategory/delete/{id}": {
            "delete": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Supprimer une sous cat√©gorie",
                "operationId": "ba5b56a4dbba43203219348cfab61306",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la sous cat√©gorie",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " supprim√©e avec succ√®s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "suppression faite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "subcategory  not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subcategory/show/{id}": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "R√©cup√©rer les d√©tails d'une sous cat√©gorie",
                "operationId": "425749db597c3a75eae7acb2c3a68c99",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la sous cat√©gorie",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " sous Cat√©gorie r√©cup√©r√©e avec succ√®s",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Subcategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
                    },
                    "404": {
                        "description": "SubCategorie non trouv√©"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "title": "Address",
                "required": [
                    "first_name",
                    "last_name",
                    "addresse",
                    "telephone1",
                    "zone"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "test"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "test"
                    },
                    "zone": {
                        "type": "string",
                        "example": "Dakar"
                    },
                    "addresse": {
                        "type": "string",
                        "example": "Hlm"
                    },
                    "quartier": {
                        "type": "string",
                        "example": "Hlm"
                    },
                    "complement_addresse": {
                        "type": "string",
                        "example": "centre ville"
                    },
                    "telephone1": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "telephone2": {
                        "type": "string",
                        "example": "123456790"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-05-16T14:36:34.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2024-05-16T14:36:34.000000Z"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "required": [
                    "id",
                    "name",
                    "description",
                    "statut",
                    "prix",
                    "quantity",
                    "categorie_id",
                    "nouveaute",
                    "created_at",
                    "updated_at",
                    "reviews",
                    "images"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "29"
                    },
                    "name": {
                        "type": "string",
                        "example": "velo mini"
                    },
                    "description": {
                        "type": "string",
                        "example": "velo"
                    },
                    "statut": {
                        "type": "integer",
                        "example": "1"
                    },
                    "prix": {
                        "type": "integer",
                        "example": "100000"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "categorie_id": {
                        "type": "integer",
                        "example": "5"
                    },
                    "sub_categorie_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "nouveaute": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T14:36:34.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T14:36:34.000000Z"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProduiImage"
                        }
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Review"
                        }
                    }
                },
                "type": "object"
            },
            "ProduiImage": {
                "title": "Images",
                "required": [
                    "id",
                    "image",
                    "produit_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "12"
                    },
                    "image": {
                        "type": "string",
                        "example": "produits/velo.jpeg"
                    },
                    "produit_id": {
                        "type": "integer",
                        "example": "29"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T14:36:34.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T14:36:34.000000Z"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "required": [
                    "id",
                    "user_id",
                    "produit_id",
                    "rating",
                    "comment",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "produit_id": {
                        "type": "integer",
                        "example": "29"
                    },
                    "rating": {
                        "type": "integer",
                        "example": "4"
                    },
                    "comment": {
                        "type": "string",
                        "example": "bvdjbjfbjkdbjkdbjfdbvjdbfd"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T15:23:17.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T15:23:17.000000Z"
                    }
                },
                "type": "object"
            },
            "Subcategory": {
                "title": "Subcategory",
                "required": [
                    "id",
                    "name",
                    "categorie_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "2"
                    },
                    "name": {
                        "type": "string",
                        "example": "Automobile"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "5"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email",
                    "date_of_birth",
                    "telephone",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "3"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "testeur"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "sn"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "makhandiakhotest@gmail.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1995-11-01"
                    },
                    "telephone": {
                        "type": "string",
                        "example": "784657023"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Non autoris√© - Jeton d'authentification manquant ou invalide"
            },
            "404": {
                "description": "Promotion non trouv√©e"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT token should be provided in the 'Authorization' header. Example: Bearer {token}",
                "scheme": "bearer"
            }
        }
    }
}